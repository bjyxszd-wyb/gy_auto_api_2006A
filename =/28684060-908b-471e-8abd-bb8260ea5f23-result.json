{"name": "全字段正常流_1", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "pub_data = {'accountName': '亢妹露', 'token': 'eyJ0aW1lT3V0IjoxNTk0NzgyOTc4NDU0LCJ1c2VySWQiOjI1NTg1LCJ1c2VyTmFtZSI6InN0cjUyMzEifQ=='}\n\n    def test_a_chongzhi(pub_data):\n        pub_data[\"accountName\"] = \"自动生成 姓名\"\n        method = \"POST\"  # 请求方法，全部大写\n        feature = \"用户模块\"  # allure报告中一级分类\n        story = '用户登录'  # allure报告中二级分类\n        title = \"全字段正常流_1\"  # allure报告中用例名字\n        uri = \"/acc/recharge\"  # 接口地址\n        # post请求json数据，注意数据格式为字典或者为json串 为空写None\n        json_data = '''\n    {\n      \"accountName\": \"${userName}\",\n      \"changeMoney\": 9999\n    }\n        '''\n        status_code = 200  # 响应状态码\n        expect = \"2000\"  # 预期结果\n        # --------------------分界线，下边的不要修改-----------------------------------------\n        # method,pub_data和url为必传字段\n        request_tool.request(method=method, url=uri, pub_data=pub_data, json_data=json_data, status_code=status_code,\n>                            expect=expect, feature=feature, story=story, title=title)\n\ntest_case\\test_hello.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntools\\report\\decorators_tool.py:120: in function\n    exec(a)\n<string>:9: in <module>\n    ???\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nbody = '{\"code\":9999,\"message\":\"该账户不存在\",\"data\":\"\"}', expected_msg = '2000'\n\n    def assert_in(body, expected_msg):\n        '''\n        验证response body中是否包含预期字符串\n        :param body:\n        :param expected_msg:\n        :return:\n        '''\n        try:\n            text = json.dumps(body, ensure_ascii=False)\n            # print(text)\n>           assert expected_msg in text\nE           AssertionError\n\ntools\\report\\assert_tool.py:19: AssertionError"}, "steps": [{"name": "第一步：获取url", "status": "passed", "start": 1594781178518, "stop": 1594781178518}, {"name": "第二步：准备测试数据", "status": "passed", "start": 1594781178519, "stop": 1594781178519}, {"name": "第三步：发送请求", "status": "passed", "attachments": [{"name": "request", "source": "6fe98494-1f53-4b4f-9694-35b9c30b6d32-attachment.txt", "type": "text/plain"}, {"name": "response", "source": "f796077b-c830-4a42-bded-4d1b73d6a831-attachment.txt", "type": "text/plain"}], "start": 1594781178519, "stop": 1594781178568}, {"name": "第四步：判断结果", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"D:\\python\\python\\auto_api\\tools\\report\\decorators_tool.py\", line 120, in function\n    exec(a)\n  File \"<string>\", line 9, in <module>\n  File \"D:\\python\\python\\auto_api\\tools\\report\\assert_tool.py\", line 19, in assert_in\n    assert expected_msg in text\n"}, "attachments": [{"name": "响应正文断言", "source": "1f1a8cb1-bda5-48a7-a5bb-cf1021b35829-attachment.txt", "type": "text/plain"}], "start": 1594781178568, "stop": 1594781178571}], "attachments": [{"name": "log", "source": "08a1de10-209f-4a0b-a7c6-222c134ceb68-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "3f6e81a8-1b03-4c75-a16d-d088f89f63af-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "85e20539-bc0f-4f38-bc9b-e43a855ca197-attachment.txt", "type": "text/plain"}], "start": 1594781178518, "stop": 1594781178573, "uuid": "64ae1b25-9e23-4f92-a7d5-2ad6f1e68e57", "historyId": "ff57e883d6e8c313550a3075e6f25b50", "fullName": "test_case.test_hello#test_a_chongzhi", "labels": [{"name": "feature", "value": "用户模块"}, {"name": "story", "value": "用户登录"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_hello"}, {"name": "subSuite"}, {"name": "host", "value": "DESKTOP-D10UEP5"}, {"name": "thread", "value": "31484-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_hello"}]}