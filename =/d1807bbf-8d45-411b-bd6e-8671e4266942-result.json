{"name": "全字段正常流_1", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "pub_data = {'accountName': 'CM0', 'token': 'eyJ0aW1lT3V0IjoxNTk0NzgyOTc4NDU0LCJ1c2VySWQiOjI1NTg1LCJ1c2VyTmFtZSI6InN0cjUyMzEifQ=='}\ndb = <tools.data.mysql_tool.mysql_db object at 0x000002A24A1064A8>\n\n    def test_a_chongzhi2(pub_data,db):\n        res = db.select_execute(\"SELECT account_name FROM `t_cst_account` WHERE STATUS = 0 AND account_name IS NOT NULL;\")\n        pub_data[\"accountName\"] = random.choice(res)[0]\n        method = \"POST\"  # 请求方法，全部大写\n        feature = \"用户模块\"  # allure报告中一级分类\n        story = '用户登录'  # allure报告中二级分类son串 为空写None\n        title = \"全字段正常流_1\"  # allure报告中用例名字\n        uri = \"/acc/charge\"  # 接口地址\n        headers = {}\n    # post请求json数据，注意数据格式为字典或者为j\n        json_data = '''\n    \n    {\n      \"accountName\": \"${accountName}\",\n      \"changeMoney\": 9999\n    }\n        '''\n        status_code = 200  # 响应状态码\n        expect = \"2000\"  # 预期结果\n        # --------------------分界线，下边的不要修改-----------------------------------------\n        # method,pub_data和url为必传字段\n        request_tool.request(method=method, url=uri, pub_data=pub_data, json_data=json_data, status_code=status_code,\n>                            expect=expect, feature=feature, story=story, title=title,headers=headers)\n\ntest_case\\test_hello.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntools\\report\\decorators_tool.py:120: in function\n    exec(a)\n<string>:9: in <module>\n    ???\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nbody = '{\"code\":9999,\"message\":\"账户余额不足:0分。\",\"data\":\"\"}', expected_msg = '2000'\n\n    def assert_in(body, expected_msg):\n        '''\n        验证response body中是否包含预期字符串\n        :param body:\n        :param expected_msg:\n        :return:\n        '''\n        try:\n            text = json.dumps(body, ensure_ascii=False)\n            # print(text)\n>           assert expected_msg in text\nE           AssertionError\n\ntools\\report\\assert_tool.py:19: AssertionError"}, "steps": [{"name": "第一步：获取url", "status": "passed", "start": 1594781179094, "stop": 1594781179094}, {"name": "第二步：准备测试数据", "status": "passed", "start": 1594781179094, "stop": 1594781179094}, {"name": "第三步：发送请求", "status": "passed", "attachments": [{"name": "request", "source": "a2fefd15-f319-4100-bfb6-b2d3ecd2dce0-attachment.txt", "type": "text/plain"}, {"name": "response", "source": "f5501da5-9243-4106-9266-8886d9949971-attachment.txt", "type": "text/plain"}], "start": 1594781179094, "stop": 1594781179182}, {"name": "第四步：判断结果", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"D:\\python\\python\\auto_api\\tools\\report\\decorators_tool.py\", line 120, in function\n    exec(a)\n  File \"<string>\", line 9, in <module>\n  File \"D:\\python\\python\\auto_api\\tools\\report\\assert_tool.py\", line 19, in assert_in\n    assert expected_msg in text\n"}, "attachments": [{"name": "响应正文断言", "source": "93b65dcf-e5f7-4dc8-9039-8083ded27f45-attachment.txt", "type": "text/plain"}], "start": 1594781179182, "stop": 1594781179185}], "attachments": [{"name": "log", "source": "e5ffca16-c590-42b3-b158-c035ee711100-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "89c19032-eca3-450a-8007-abd6c2091877-attachment.txt", "type": "text/plain"}], "start": 1594781178645, "stop": 1594781179186, "uuid": "ceb435ec-46f8-4c42-883f-4f3e93fd0772", "historyId": "cfde229315ab8062599230b4c0db9753", "fullName": "test_case.test_hello#test_a_chongzhi2", "labels": [{"name": "feature", "value": "用户模块"}, {"name": "story", "value": "用户登录"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_hello"}, {"name": "subSuite"}, {"name": "host", "value": "DESKTOP-D10UEP5"}, {"name": "thread", "value": "31484-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_hello"}]}